#  A space-separated list of domains, optionally prefixed with "~", used for two distinct purposes described below. Defaults to the empty list.

#  Any domains not prefixed with "~" are used as search suffixes when resolving single-label hostnames (domain names which contain no dot), in order to qualify them into
#  fully-qualified domain names (FQDNs). These "search domains"
#  are strictly processed in the order they are specified in, until the name with the suffix appended is found. For compatibility reasons, if this setting is not specified, the
#  search domains listed in /etc/resolv.conf with the search keyword are used instead, if that file exists and any domains are configured in it.

#  The domains prefixed with "~" are called "route-only domains". All domains listed here (both search domains and route-only domains after removing the "~" prefix) define a
#  search path that preferably directs DNS queries to this interface. This search path has an effect only when suitable per-link DNS servers are known. Such servers may be defined
#  through the DNS= setting (see above) and dynamically at run time, for example from DHCP leases. If no per-link DNS servers are known, route-only domains have no effect.

#  Use the construct "~."  (which is composed from "~" to indicate a route-only domain and "."  to indicate the DNS root domain that is the implied suffix of all DNS domains) to
#  use the DNS servers defined for this link preferably for all domains.

#  See "Protocols and Routing" in systemd-resolved.service(8) for details of how search and route-only domains are used.

#  Note that configuring the MulticastDNS domain "local" as search or routing domain has the effect of routing lookups
#  for this domain to classic unicast DNS. This may be used to provide compatibility with legacy installations that use this
#  domain in a unicast DNS context, against the IANA assignment of this domain to pure MulticastDNS purposes. Search and
#  routing domains are a unicast DNS concept, they cannot be used to resolve single-label lookups via MulticastDNS.

#  Default: 

Domains=